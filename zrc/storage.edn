{ns storage
 import #{fhir}

 storage-schema
 {:zen/tags #{zen/schema}
  :type zen/map
  :keys {:kind {:type zen/string}}}

 storage
 {:zen/tags #{zen/tag}}

 storage-impl
 {:zen/tags #{zen/tag}}

 operation-impl
 {:zen/tags #{zen/tag}}

 zen-storage
 {:zen/tags #{storage}
  :kind "zen"}

 pgstore-config
 {:zen/tags #{storage-impl}
  :persist zen-storage
  :tags #{storage pgstore}
  :namespace "storage"}

 create-pgstore
 {:zen/tags #{operation-impl}
  :storage pgstore-config
  :schema pgstore
  :operation insert-op}

 pgstore
 {:zen/tags #{zen/tags zen/schema}
  :type zen/map
  :require #{:user :password :host :port}
  :confirms #{storage-schema}
  :keys
  {:user {:type zen/string}
   :password {:type zen/string}
   :host {:type zen/string}
   :port {:type zen/number}}}

 postgres
 {:zen/tags #{storage pgstore}
  :kind "postgres"
  :user "root"
  :password "password"
  :host "db"
  :port 5432}

 atom-storage
 {:zen/tags #{storage}
  :kind "atom"
  }


 inmemory
 {:zen/tags #{storage-impl}
  :persist atom-storage}

 practitioner-on-disk
 {:zen/tags #{storage-impl}
  :table "practitioner"
  :kind "jsobn"
  :persist postgers}

 insert-patient
 {:zen/tags #{operation-impl}
  :storage inmemory
  :schema fhir/patient
  :operation insert-op}

 read-patient
 {:zen/tags #{operation-impl}
  :storage inmemory
  :schema fhir/resource
  :operation read-op}

 delete-patient
 {:zen/tags #{operation-impl}
  :storage inmemory
  :schema fhir/resource
  :operation delete-op}

 insert-practitioner
 {:zen/tags #{operation-impl}
  :storage practitioner-on-disk
  :schema fhir/practitioner
  :operation insert-op}
 }
