{ns demo
 import #{zenbox zen-ui fhir}

 db
 {:zen/tags #{zenbox/service}
  :service zenbox/pg
  :port 5451
  :host "localhost"
  :user "postgres"
  :password "postgres"
  :database "mybox"}

 server
 {:zen/tags #{zenbox/server}
  :port 4445
  :services #{db}
  :after-start [ensure-stores]
  :apis #{api}}

 ;; routing
 api
 {:zen/tags #{zenbox/api}
  :GET {:operation index-op}
  "json-rpc" {:POST {:operation json-rpc-op}}
  "zen" {:apis #{zen-api}}}

 zen-api
 {:zen/tags #{zenbox/api}
  "symbols" {:GET {:operation zen-ui/get-symbols}
             [:ns] {[:name] {:GET {:operation zen-ui/get-symbol}}}}
  "tags"    {:GET {:operation zen-ui/get-tags}}}

 index-op
 {:zen/tags #{zenbox/op}
  :operation zenbox/response
  :response {:status 302 :headers {"location" "static/index.html"}}}

 json-rpc-op
 {:zen/tags #{zenbox/op}
  :operation zenbox/json-rpc}

 ensure-stores
 {:zen/tags #{zenbox/rpc}
  :operation zenbox/ensure-stores
  :dbs #{db}}

 ;; user

 user
 {:zen/tags #{zen/schema}
  :type zen/map
  :keys {:name {:type zen/string}
         :email {:type zen/string}}}

 sql-op
 {:zen/tags #{zenbox/rpc}
  :operation zenbox/sql
  :db db}

 user-store
 {:zen/tags #{zenbox/store zenbox/jsonb-store}
  :engine zenbox/jsonb-store
  :db db
  :table-name "users"
  :schemas #{user}
  :indices {}}

 new-user
 {:zen/tags #{zen/schema}
  :type zen/map
  :require #{:email}}

 create-user
 {:zen/tags #{zenbox/rpc}
  :operation zenbox/insert
  :storage user-store
  :schemas #{new-user}}

 read-user
 {:zen/tags #{zenbox/rpc}
  :operation zenbox/read
  :storage user-store}

 search-user
 {:zen/tags #{zenbox/rpc}
  :operation zenbox/search
  :storage user-store
  :params {:name {}}}

 ;; patient
patient
{:zen/tags #{zen/schema}
 :confirms #{fhir/patient}}

patient-store
{:zen/tags #{zenbox/store zenbox/atom-store}
 :engine zenbox/atom-store
 :schemas #{patient}
 :path [:fhir]}

insert-patient
{:zen/tags #{zenbox/rpc}
 :storage patient-store
 :operation zenbox/insert}

read-patient
{:zen/tags #{zenbox/rpc}
 :operation zenbox/read
 :storage patient-store
 :params #{fhir/reference}
 :result #{patient}}

delete-patient
{:zen/tags #{zenbox/rpc}
 :operation zenbox/delete
 :storage patient-store
 :params #{fhir/reference}}}

