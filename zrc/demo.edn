{ns demo
 import #{zenbox zen-ui fhir storage}

 db
 {:zen/tags #{zenbox/service}
  :service zenbox/pg
  :port 5451
  :host "localhost"
  :user "postgres"
  :password "postgres"
  :database "mybox"}

 server
 {:zen/tags #{zenbox/server}
  :port 4445
  :services #{db}
  :apis #{api}}

 index-op
 {:zen/tags #{zenbox/op}
  :operation zenbox/response
  :response {:status 302 :headers {"location" "static/index.html"}}}

 ;; instance of zenbox/json-rpc
 json-rpc-op
 {:zen/tags #{zenbox/op}
  ;; configuration
  :operation zenbox/json-rpc}

 insert-patient
 {:zen/tags #{zenbox/rpc}
  :operation storage/handle
  :handler storage/insert-patient}

 read-patient
 {:zen/tags #{zenbox/rpc}
  :operation storage/handle
  :handler storage/read-patient}

 delete-patient
 {:zen/tags #{zenbox/rpc}
  :operation storage/handle
  :handler storage/delete-patient}

 read-practitioner
 {:zen/tags #{zenbox/rpc}
  :operation storage/handle
  :handler storage/read-practitoner}

 create-pgstore
 {:zen/tags #{zenbox/rpc}
  :operation storage/handle
  :handler storage/create-pgstore}

 dashboard
 {:zen/tags #{zenbox/rpc}}

 all-tags
 {:zen/tags #{zenbox/rpc}}

 api
 {:zen/tags #{zenbox/api}
  :GET {:operation index-op}
  "json-rpc" {:POST {:operation json-rpc-op}}
  "zen" {:apis #{zen-api}}}

 zen-api
 {:zen/tags #{zenbox/api}
  "symbols" {:GET {:operation get-symbols}
             [:ns] {[:name] {:GET {:operation get-symbol}}}}
  "tags"    {:GET {:operation get-tags}}}

 get-all-symbols
 {:zen/tags #{zenbox/rpc}
  :zen/desc "Get all tags"
  :params {:type zen/map}}

 zen-validate
 {:zen/tags #{zenbox/rpc}
  :zen/desc ""
  :params {:type zen/map
           :keys {:schema {:type zen/symbol}
                  :data   {:type zen/any}}}}

 }
